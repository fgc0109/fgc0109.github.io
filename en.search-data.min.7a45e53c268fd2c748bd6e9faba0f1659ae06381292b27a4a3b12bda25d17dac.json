[{"id":0,"href":"/docs/version_management/git/git_amend_commit_info/","title":"Git修改提交信息","section":"Git","content":"Git修改提交信息 #  很容易犯在不同库中提交代码发现默认配置的author信息没有变更，\n 参考链接 #  https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E9%87%8D%E5%86%99%E5%8E%86%E5%8F%B2\n 1. 修改最近一次提交 #  如果只需要最近一次提交，那么很简单直接使用git commit –amend就可以搞定\n$ git commit --amend\r 上面这条命令会将最后一次的提交信息载入到编辑器中供你修改。 当保存并关闭编辑器后，编辑器会将更新后的提交信息写入新提交中，它会成为新的最后一次提交。\ngit修改提交历史中的author信息\n 解决方法二\n如果是多个修改，那么就需要使用到git filter-branch这个工具来做批量修改 为了方便大家使用，封装了一个简单的shell脚本，直接修改[XXX]中的变量为对应的值即可\n#!/bin/sh\ngit filter-branch \u0026ndash;env-filter '\nan=\u0026quot;$GIT_AUTHOR_NAME\u0026quot; am=\u0026quot;$GIT_AUTHOR_EMAIL\u0026quot; cn=\u0026quot;$GIT_COMMITTER_NAME\u0026quot; cm=\u0026quot;$GIT_COMMITTER_EMAIL\u0026quot;\nif [ \u0026ldquo;$GIT_COMMITTER_EMAIL\u0026rdquo; = \u0026ldquo;[Your Old Email]\u0026rdquo; ] then cn=\u0026quot;[Your New Author Name]\u0026quot; cm=\u0026quot;[Your New Email]\u0026quot; fi if [ \u0026ldquo;$GIT_AUTHOR_EMAIL\u0026rdquo; = \u0026ldquo;[Your Old Email]\u0026rdquo; ] then an=\u0026quot;[Your New Author Name]\u0026quot; am=\u0026quot;[Your New Email]\u0026quot; fi\nexport GIT_AUTHOR_NAME=\u0026quot;$an\u0026quot; export GIT_AUTHOR_EMAIL=\u0026quot;$am\u0026quot; export GIT_COMMITTER_NAME=\u0026quot;$cn\u0026quot; export GIT_COMMITTER_EMAIL=\u0026quot;$cm\u0026quot; '\n"},{"id":1,"href":"/docs/version_management/git/git_add_submodule/","title":"Git添加子模块","section":"Git","content":"Git添加子模块 #  某个工作中的项目需要包含并使用另一个项目。 也许是第三方库，或者你独立开发的，用于多个父项目的库。 现在问题来了：你想要把它们当做两个独立的项目，同时又想在一个项目中使用另一个。\n 1. 子模块的添加 #  添加子模块非常简单，命令如下：\ngit submodule add {{url}} {{path}}\r 其中，url为子模块的路径，path为该子模块存储的目录路径，例如\ngit submodule add https://github.com/{{name_of_user}}/{{name_of_repo}}.git {{name_of_path}}\r 项目下面会添加新的 .gitmodules 文件。 该配置文件保存了项目 URL 与已经拉取的本地目录之间的映射：\n[submodule \u0026quot;{{name_of_path}}\u0026quot;]\rpath = {{name_of_path}}\rurl = https://github.com/{{name_of_user}}/{{name_of_repo}}\r  2. 子模块的使用 #  克隆项目后，默认子模块目录下无任何内容。需要在项目根目录执行如下命令完成子模块的下载：\ngit submodule init\rgit submodule update\r 或：\ngit submodule update --init --recursive\r 执行后，子模块目录下就有了源码\n"},{"id":2,"href":"/docs/version_management/git/gitlab_linux_install/","title":"GitLab中文社区版在Ubuntu系统安装和更新","section":"Git","content":" 更新记录\n20180303: 添加了GitLab更新部分的内容；修改了命令中的版本号；使用Markdown重写，对于代码的应用显示效果更好。\n 一. GitLab的安装 #  GitLab中文官网地址：https://www.gitlab.com.cn/ 使用官方推荐的Omnibus 包安装方法 添加 GitLab 镜像源并安装\ncurl -sS http://packages.gitlab.com.cn/install/gitlab-ce/script.deb.sh | sudo bash\rsudo apt-get install gitlab-ce\r 配置并启动 GitLab\nsudo gitlab-ctl reconfigure\r  二. GitLab的更新 #  首次进行更新需要添加以下命令，否则更新会出错\nsudo touch /etc/gitlab/skip-auto-migrations\r 更新 GitLab\n# 停止 GitLab 的运行\rgitlab-ctl stop\r# 更新 GitLab\rsudo apt-get update \u0026amp;\u0026amp; sudo apt-get install gitlab-ce\r 更新后的 GitLab 可能需要重新进行汉化 之后可以重新启动 GitLab\nsudo gitlab-ctl reconfigure\rsudo gitlab-ctl restart\r  三. GitLab中文配置 #  获取GitLab中文版本：\nGitLab 8.8之前 https://gitlab.com/larryli/gitlab GitLab 8.8之后 https://gitlab.com/xhang/gitlab\n请先使用官方包安装或升级完成，确认当前版本。\nsudo cat /opt/gitlab/embedded/service/gitlab-rails/VERSION\r 确认汉化版本库是否包含该版本的汉化标签(-zh结尾)。 如果汉化版本库中包含相同的版本就可以进行汉化，首先在本地 clone 或 fetch 汉化版本库仓库。\n# 克隆汉化版本库\rgit clone https://gitlab.com/xhang/gitlab.git\r# 更新汉化版本库\rcd gitlab \u0026amp;\u0026amp; git fetch\r 然后比较汉化标签和原标签，导出 patch 用的 diff 文件。\n# 在 GitLab 文件夹下导出新版本的汉化补丁 cd gitlab\rgit diff v10.5.2 v10.5.2-zh \u0026gt; ../v10.5.2-zh.diff\r 然后使用 v10.5.2-zh.diff 文件对服务器进行更新。\n# 停止 GitLab\rsudo gitlab-ctl stop\r# 回到包含 v10.5.2-zh.diff 文件的目录下，对 GitLab 进行更新\rsudo patch -d /opt/gitlab/embedded/service/gitlab-rails -p1 \u0026lt; v10.5.2-zh.diff\r 确定没有 .rej 文件，重启 GitLab 即可。 更新后再次汉化如果出现 The next patch would create the file XXXXX whitch is already exist 提示，选择 y 确认即可。\nsudo gitlab-ctl start\r 执行重新配置命令\nsudo gitlab-ctl reconfigure\r 如果汉化中出现问题，请重新安装 GitLab（注意备份数据）。\n 四. 其他问题 #  1.GitLab头像无法正常显示 #  原因是gravatar被墙，解决办法是编辑/etc/gitlab/gitlab.rb，将\n#gitlab_rails['gravatar_plain_url'] ='http://gravatar.duoshuo.com/avatar/%{hash}?s=%{size}\u0026amp;d=identicon'\r 修改为：\ngitlab_rails['gravatar_plain_url'] ='http://gravatar.duoshuo.com/avatar/%{hash}?s=%{size}\u0026amp;d=identicon'\r 然后在命令行执行：\nsudo gitlab-ctl reconfigure\rsudo gitlab-rake cache:clear RAILS_ENV=production\r 2.配置网址 #  打开/etc/gitlab/gitlab.rb,将external_url ='http://git.example.com'修改为自己的IP地址：http://xxx.xx.xxx.xx,，\nsudo gitlab-ctl reconfigure\r 3.更改仓库位置 #  首先查看磁盘挂载情况\ndf -hl\rfdisk -lu\r 查看一个磁盘的UUID并挂载磁盘\nblkid /dev/xvde1\r /etc/fstab文件需要添加的内容\n# xvde1\rUUID=0b9c0e4b-e731-47b6-880d-c6c94b70ce4f /data ext3 defaults 0 2\r 停止相关数据连接服务\ngitlab-ctl stop unicorn\rgitlab-ctl stop sidekiq\r 进行数据迁移，例如gitlab代码数据默认目录 /var/opt/gitlab/git-data/repositories，迁移目的地为 /data\ncp -rp /var/opt/gitlab/git-data/repositories/ /data\r#or\rcp -rp /var/opt/gitlab /data\r 修改gitlab配置文件\nvim /etc/gitlab/gitlab.rb\r 指定数据目录\ngit_data_dir \u0026quot;/data\u0026quot;\rgit_data_dirs({\u0026quot;default\u0026quot; = \u0026quot;/data\u0026quot;})\r# git_data_dirs({ \u0026quot;default\u0026quot; =\u0026gt; { \u0026quot;path\u0026quot; =\u0026gt; \u0026quot;/data/gitlab/git-data\u0026quot;, 'gitaly_address' =\u0026gt; 'unix:/data/gitlab/gitaly/gitaly.socket' } })\r 执行重新配置命令\ngitlab-ctl reconfigure\r 重启 GitLab 即可。\nsudo gitlab-ctl start\r 4.重新安装修复GitLab #  重新安装包\nsudo apt-get install gitlab-ce --reinstall\r "},{"id":3,"href":"/docs/version_management/git/git_delete_file_and_folder/","title":"Git删除文件或文件夹的提交记录","section":"Git","content":"重写历史 #  在使用 Git 时，可能偶然地提交了一个包括一个密码的文件、一些巨大并且无用的二进制文件等情况，你可能想要修订提交历史\n参考 https://git-scm.com/docs/git-filter-branch\n命令解释\ngit filter-branch\rgit filter-branch [--env-filter \u0026lt;command\u0026gt;][--tree-filter \u0026lt;command\u0026gt;][--index-filter \u0026lt;command\u0026gt;][--parent-filter \u0026lt;command\u0026gt;]\u0026lt;br\u0026gt;[--msg-filter \u0026lt;command\u0026gt;][--commit-filter \u0026lt;command\u0026gt;][--tag-name-filter \u0026lt;command\u0026gt;][--subdirectory-filter \u0026lt;directory\u0026gt;]\u0026lt;br\u0026gt;[--prune-empty][--original \u0026lt;namespace\u0026gt;][-d \u0026lt;directory\u0026gt;][-f|--force][--][\u0026lt;rev-list options\u0026gt;…​]\r 重置指定分支的 Git 历史记录，同时在每一个提交结点上运用指定的过滤器。\n   参数 解释     \u0026ndash;env-filter \u0026lt;command\u0026gt; 修改将在其中执行提交的环境，常用于重写作者/提交者名称/电子邮件/时间环境变量   \u0026ndash;tree-filter \u0026lt;command\u0026gt; 重写树及其内容的过滤器   \u0026ndash;index-filter \u0026lt;command\u0026gt; 重写索引的过滤器。类似于树过滤器，但不检出树，因此速度更快。   \u0026ndash;parent-filter \u0026lt;command\u0026gt; 用于重写提交的父列表的过滤器。它将在stdin上接收父字符串，并在stdout上输出新的父字符串。   \u0026ndash;msg-filter \u0026lt;command\u0026gt; 重写提交消息。   \u0026ndash;commit-filter \u0026lt;command\u0026gt; 执行提交的过滤器   \u0026ndash;tag-name-filter \u0026lt;command\u0026gt; 重写标签名称，原始标签不会被删除，但可以被覆盖   \u0026ndash;subdirectory-filter \u0026lt;directory\u0026gt; 只查看涉及给定子目录的历史记录   \u0026ndash;prune-empty 过滤常常生成空的提交，从而使树保持不变。此参数会删除空提交。因此仅适用于只有一个父对象的提交它将保留合并点。与\u0026ndash;commit-filter不兼容。   \u0026ndash;original \u0026lt;namespace\u0026gt; 使用此选项设置原始提交将存储在其中的名称空间。默认值是refs/original。   -d \u0026lt;directory\u0026gt; 使用此选项可将路径设置为用于重写的临时目录。使用tree-filter, 该命令需要暂时将该树检出到某个目录，大型项目的情况下可能消耗很大空间。默认情况下，它在.git-rewrite/目录中执行此操作，但您可以通过此参数覆盖该选项。   -f/\u0026ndash;force git filter-branch拒绝从现有的临时目录开始过滤，或者当已经有ref时refs/original/，使用该参数强制执行过滤。   \u0026lt;rev-list options\u0026gt; 参数git rev-list。\n#所有positive refs都被重写。您也可以指定选项\u0026ndash;all，但您必须使用\u0026ndash;将修订选项与git filter-branch选项分开。\u0026ndash;all重写所有分支和标记。     删除文件或文件夹记录 #  删除整个文件夹的提交记录\ngit filter-branch --force --index-filter 'git rm -r --cached --ignore-unmatch \u0026lt;name-of-folder\u0026gt;' --prune-empty --tag-name-filter cat -- --all\r 删除单个文件的提交记录\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch \u0026lt;name-of-file\u0026gt;' --prune-empty --tag-name-filter cat -- --all\r \u0026ndash;tree-filter将每个提交签出到临时目录中，运行filter命令，并从临时目录中的任何内容生成新的提交；而\u0026ndash;index-filter将每个提交复制到索引中，运行filter命令，并从索引中的任何内容生成新的提交。 \u0026ndash;tree-filter的选项可能非常慢，尤其是在具有大量提交的大型存储库中。\n 拆分Git目录 #  复制多份Repo并依次删除每个Repo中除了需要保留的子路径之外的所有内容\ngit filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter \u0026lt;name-of-folder\u0026gt; -- --all\r 这条命令同样会过滤所有历史提交，只保留所有对指定子目录有影响的提交，并将该子目录设为该仓库的根目录。这里说明各下个参数的作用：\n--tag-name-filter 该参数控制我们要如何处理旧的 tag，cat 即表示原样输出；\r--prune-empty 删除空的（对子目录没有影响的）提交；\r--subdirectory-filter 指定子目录路径；\r-- --all 该参数必须跟在 -- 后面，表示对所有分支进行操作。如果你只想保存当前分支，也可以不添加此参数。\r  清理.git的object #  当上述命令执行完毕后，就可以看到本地的新仓库已经是原仓库子目录中的内容了，且保留了关于该子目录所有的提交历史。不过只是这样的话新仓库中的 .git 目录里还是保存有不少无用的 object，我们需要将其清除掉以减小新仓库的体积（如果你用subtree 的方法的话是不需要执行这一步的）。 依次执行以下命令：\ngit reset --hard\r 移除对该旧分支的引用\ngit for-each-ref --format=\u0026quot;%(refname)\u0026quot; refs/original/ |xargs -n 1 git update-ref -d\r 使所有松散的object失效\ngit reflog expire --expire=now --all\r git的垃圾清理车最终删除那些对象\ngit gc --aggressive --prune=now\r 检查是否有松散的object, 验证数据库中对象的连接性和有效性\ngit fsck --unreachable "},{"id":4,"href":"/docs/version_management/subversion/Subversion%E5%AE%89%E8%A3%85/","title":"Subversion安装","section":"Subversion","content":" 文章更新记录\n20190527:创建。\n 一. Subversion 资料 #  Subversion 官网地址：https://subversion.apache.org/\nSubversion 官网下载地址：https://subversion.apache.org/packages.html\n 二. Subversion 安装 #  安装 Subversion\nyum -y install subversion\r 配置并启动 Subversion\nsudo gitlab-ctl reconfigure\r  三. Subversion 管理 #  1. 停止 Subversion #  killall svnserve\r 2. 启动 Subversion #  例如仓库地址为 /data/subversion/ 则对应命令如下:\n-d 表示守护进程, -r 表示在后台执行\nsvnserve -d -r /data/subversion/dotbqp\r 多个svn\nsvnserve -d -r /usr/local/svn/svnrepos (这里目录配到总目录，不是仓库目录)\r在windows环境检出项目的时候，  仓库1的检出地址为：svn://ip地址/warehouse1 仓库2的检出地址为：svn://ip地址/warehouse2\n3. 备份 Subversion #  关闭所有运行的进程,并确认没有程序在访问存储库(如 httpd,svnserve 或本地用户在直接访问)\n压缩备份\nsvnadmin dump /data/subversion/ | gzip \u0026gt; /data/subversion-backup.gz\r 直接备份\nsvnadmin dump /data/subversion/ \u0026gt; /data/subversion-backup.dump\r 4. 还原 Subversion #  新建一个版本库，用来存放要还原的内容：\nsvnadmin create /data/subversion/dotbqp\r 进行还原\ngzip -cd /data/subversion-backup.gz \u0026gt; /data/subversion-backup.dump\rsvnadmin load /data/subversion/dotbqp \u0026lt; /data/subversion-backup.dump\rscp /data/subversion-backup.gz root@192.168.11.226:/data/subversion-backup.gz\rscp root@192.168.0.5:/data/subversion-backup.gz /data/subversion-backup.gz\r 检查版本库 svnadmin verify\n5. Nginx 反向代理SVN #  安装配置apache\nyum install httpd\n安装插件 yum install mod_dav_svn -y\nsystemctl enable httpd\n注意要把httpd的默认80端口换掉，避免与nginx冲突\nvim /etc/httpd/conf/httpd.conf\nLoadModule dav_module modules/mod_dav.so LoadModule dav_svn_module modules/mod_dav_svn.so\nListen 8080\n设置版本库网站，要注意的是，版本库的网站不是iF.SVNAdmin的网站 vim /etc/httpd/conf.d/w_svn_8081.conf\nListen 8081 DAV svn SVNParentPath /data/subversion AuthType Basic AuthName \u0026ldquo;svn repos\u0026rdquo; AuthzSVNAnonymous off AuthUserFile /data/subversion/dotbqp/conf/passwd AuthzSVNAccessFile /data/subversion/dotbqp/conf/authz Require valid-user \n访问路径 [host]:[port]/[repo]\n添加apache使用的密文密码\nhtpasswd -nb fgc01 1EF%%pe#dwO*2i3Z htpasswd -nb ssq01 ZYoolPi$4Cw$nmx! htpasswd -nb zhm01 DPce$!bDBlDkwtNO\nfgc01:$apr1$OQBUqH.k$Lo4gnejwzT8sm42asqAFW1 ssq01:$apr1$3zyhJREC$zfztMHm78.K2a7iAGqieU/ zhm01:$apr1$meb/gokz$SFGTFIy1YpZbd3UIZTWsM.\n权限 chmod -R 777 /var/lib/nginx/tmp chmod -R 777 /var/lib/nginx chmod -R 777 /data/subversion\n"},{"id":5,"href":"/docs/_shortcodes/buttons/","title":"Buttons","section":"Shortcodes","content":"Buttons #  Buttons are styled links that can lead to local page or external link.\nExample #  {{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/alex-shpak/hugo-book\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}}  Get Home  Contribute  "},{"id":6,"href":"/docs/_shortcodes/columns/","title":"Columns","section":"Shortcodes","content":"Columns #  Columns help organize shorter pieces of content horizontally for readability.\n{{\u0026lt; columns \u0026gt;}} \u0026lt;!-- begin columns block --\u0026gt; # Left Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; # Mid Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; # Right Content Lorem markdownum insigne... {{\u0026lt; /columns \u0026gt;}} Example #  Left Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.  Mid Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!  Right Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.   "},{"id":7,"href":"/docs/_shortcodes/details/","title":"Details","section":"Shortcodes","content":"Details #  Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.\nExample #  {{\u0026lt; details \u0026#34;Title\u0026#34; [open] \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /details \u0026gt;}} {{\u0026lt; details title=\u0026#34;Title\u0026#34; open=true \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /details \u0026gt;}} Title Markdown content Lorem markdownum insigne\u0026hellip;   "},{"id":8,"href":"/docs/_shortcodes/expand/","title":"Expand","section":"Shortcodes","content":"Expand #  Expand shortcode can help to decrease clutter on screen by hiding part of text. Expand content by clicking on it.\nExample #  Default #  {{\u0026lt; expand \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}}   Expand ↕  Markdown content Lorem markdownum insigne\u0026hellip;    With Custom Label #  {{\u0026lt; expand \u0026#34;Custom Label\u0026#34; \u0026#34;...\u0026#34; \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}}   Custom Label ...  Markdown content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.    "},{"id":9,"href":"/docs/_shortcodes/hints/","title":"Hints","section":"Shortcodes","content":"Hints #  Hint shortcode can be used as hint/alerts/notification block.\nThere are 3 colors to choose: info, warning and danger.\n{{\u0026lt; hint [info|warning|danger] \u0026gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{\u0026lt; /hint \u0026gt;}} Example #  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  "},{"id":10,"href":"/docs/_shortcodes/katex/","title":"Katex","section":"Shortcodes","content":"KaTeX #  KaTeX shortcode let you render math typesetting in markdown document. See KaTeX\nExample #  {{\u0026lt; katex [display] [class=\u0026#34;text-center\u0026#34;] \u0026gt;}} f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi {{\u0026lt; /katex \u0026gt;}}     \\[f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\\]    Display Mode Example #  Here is some inline example:  \\(\\pi(x)\\)  , rendered in the same line. And below is display example, having display: block  \\[f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\\]  Text continues here.\n"},{"id":11,"href":"/docs/_shortcodes/mermaid/","title":"Mermaid","section":"Shortcodes","content":"Mermaid Chart #   MermaidJS is library for generating svg charts and diagrams from text.\nOverride Mermaid Initialization Config\nTo override the initialization config for Mermaid, create a mermaid.json file in your assets folder!\n Example #  {{\u0026lt; mermaid [class=\u0026#34;text-center\u0026#34;]\u0026gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --\u0026gt; State2 note left of State2 : This is the note to the left. {{\u0026lt; /mermaid \u0026gt;}}    mermaid.initialize({ \"flowchart\": { \"useMaxWidth\":true }, \"theme\": \"default\" } ) stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 -- State2 note left of State2 : This is the note to the left.   "},{"id":12,"href":"/docs/_shortcodes/section/","title":"Section","section":"Shortcodes","content":"Section #  Section renders pages in section as definition list, using title and description.\nExample #  {{\u0026lt; section \u0026gt;}}   First Page  First page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   Second Page  Second Page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   "},{"id":13,"href":"/docs/_shortcodes/section/first-page/","title":"First Page","section":"Section","content":"First page #  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":14,"href":"/docs/_shortcodes/section/second-page/","title":"Second Page","section":"Section","content":"Second Page #  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":15,"href":"/docs/_shortcodes/tabs/","title":"Tabs","section":"Shortcodes","content":"Tabs #  Tabs let you organize content by context, for example installation instructions for each supported platform.\n{{\u0026lt; tabs \u0026#34;uniqueid\u0026#34; \u0026gt;}} {{\u0026lt; tab \u0026#34;MacOS\u0026#34; \u0026gt;}} # MacOS Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Linux\u0026#34; \u0026gt;}} # Linux Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Windows\u0026#34; \u0026gt;}} # Windows Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; /tabs \u0026gt;}} Example #  MacOS MacOS This is tab MacOS content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nLinux Linux This is tab Linux content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nWindows Windows This is tab Windows content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n "},{"id":16,"href":"/docs/linux/Linux%E4%BD%BF%E7%94%A8fstab%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/","title":"Linux使用fstab自动挂载移动硬盘","section":"Linux相关","content":"本文首先记录“移动硬盘挂载”实际发生的问题，然后浅析了fstab这一重要配置文件和使用，最后总结了Raspberry Pi上自动挂载移动硬盘的方法。本文主要基于Raspberry Pi和Raspbian描述问题，当然它也广泛适用于各Linux发行版环境中 ; )。\n"}]